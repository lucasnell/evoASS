// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// F_t_
arma::rowvec F_t_(const std::vector<arma::rowvec>& V, const arma::rowvec& N, const double& f, const double& g, const arma::mat& C, const double& r0, const double& d);
RcppExport SEXP _evoASS_F_t_(SEXP VSEXP, SEXP NSEXP, SEXP fSEXP, SEXP gSEXP, SEXP CSEXP, SEXP r0SEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<arma::rowvec>& >::type V(VSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type N(NSEXP);
    Rcpp::traits::input_parameter< const double& >::type f(fSEXP);
    Rcpp::traits::input_parameter< const double& >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< const double& >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< const double& >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(F_t_(V, N, f, g, C, r0, d));
    return rcpp_result_gen;
END_RCPP
}
// F_t_deriv_
double F_t_deriv_(const arma::rowvec V_i, const std::vector<arma::rowvec>& V_nei, const double& N_i, const arma::rowvec& N_nei, const double& f, const double& g, const arma::mat& C, const double& r0, const double& d);
RcppExport SEXP _evoASS_F_t_deriv_(SEXP V_iSEXP, SEXP V_neiSEXP, SEXP N_iSEXP, SEXP N_neiSEXP, SEXP fSEXP, SEXP gSEXP, SEXP CSEXP, SEXP r0SEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec >::type V_i(V_iSEXP);
    Rcpp::traits::input_parameter< const std::vector<arma::rowvec>& >::type V_nei(V_neiSEXP);
    Rcpp::traits::input_parameter< const double& >::type N_i(N_iSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type N_nei(N_neiSEXP);
    Rcpp::traits::input_parameter< const double& >::type f(fSEXP);
    Rcpp::traits::input_parameter< const double& >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< const double& >::type r0(r0SEXP);
    Rcpp::traits::input_parameter< const double& >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(F_t_deriv_(V_i, V_nei, N_i, N_nei, f, g, C, r0, d));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_evoASS_F_t_", (DL_FUNC) &_evoASS_F_t_, 7},
    {"_evoASS_F_t_deriv_", (DL_FUNC) &_evoASS_F_t_deriv_, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_evoASS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
